package org.monarchinitiative.squirls.core;

import org.monarchinitiative.squirls.core.classifier.Classifiable;
import org.monarchinitiative.squirls.core.scoring.Annotatable;

/**
 * Implementors represent containers for variant, predictions generated by splicing analysis, as well as all the
 * associated data.
 */
public interface SplicingPredictionData extends Annotatable, Classifiable {

    /**
     * Get the feature value after casting the value to double.
     *
     * @param featureName name of the feature
     * @return feature casted to double
     */
    default double getFeatureAsDouble(String featureName) {
        return getFeature(featureName, Double.class);
    }

    /**
     * Get the feature value after rounding up the value to integer.
     *
     * @param featureName name of the feature
     * @return feature casted to integer
     */
    default int getFeatureAsInt(String featureName) {
        return (int) Math.round(getFeature(featureName, Double.class));
    }
}
